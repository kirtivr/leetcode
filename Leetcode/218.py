import heapq

class Solution:
    def getSkyline(self, buildings):
        """
        :type buildings: List[List[int]]
        :rtype: List[List[int]]
        """

        N = len(buildings)
        if N == 0:
            return []
        
        crit = []
        
        for i in range(N):            
            crit.append([buildings[i][0],buildings[i][2]])
            crit.append([buildings[i][1],0])

        numC = len(crit)
        crit = sorted(crit, key=lambda c:c[0])

        heap = []
        height = []

        i = 0
        j = 0
        b = None
        curr = None
#        print(buildings)
#        print('{}')
        
        while i < numC and j <= N:
            if b != None:
                while b[1] < c[0] and j < N:
                    b = buildings[j]
                    j += 1

            if j < N:
                b = buildings[j]

            c = crit[i]
            
#            print(c)
#            print(b)
            if b[0] <= c[0] and (-b[2],b[0],b[1]) not in heap:
                heapq.heappush(heap,(-b[2],b[0],b[1]))
                if j != N:
                    j += 1
#                print('push onto heap ___/******')
                
#            print(heap)
#            print('\\\\\\\o///////')

            if len(heap) == 0:
                c[1] = 0
                i += 1
                continue
            else:
                while heap[0][2] <= c[0]:
                    heapq.heappop(heap)
                    if len(heap) == 0:
                        break

                if len(heap) == 0:
                    c[1] = 0
                    i += 1
                    continue
                else:
                    curr = heap[0]
                    
            if curr[1] <= c[0] < curr[2]:
                c[1] = max(c[1],-1*curr[0])
            else:
                c[1] = 0

            i += 1

#        print(crit)

        prev = None
        print('numC = '+str(numC)+' i = '+str(i)+' j = '+str(j) + ' num bld = '+str(len(buildings)))
        
        for i in range(len(crit)):
            if prev == None:
                prev = [crit[i][0],crit[i][1]]
                height.append(prev)

            currHt = crit[i][1]

            if currHt == prev[1]:
                continue

            prev = [crit[i][0],crit[i][1]]
            height.append(prev)

        res = []
        
        for i,item in enumerate(height):
            h = item[1]
            x = item[0]
            if len(res) == 0:
                res.append([x,h])
                continue
            elif res[-1][0] == x and res[-1][1] < h:
                res = res[:-1]
                res.append([x,h])
            elif res[-1][0] != x:
                res.append([x,h])

 #       print(res)
        
        return res

if __name__ == '__main__':
    buildings = [[2302,521688,394023],[10396,840253,671644],[22633,740538,553794],[33104,968793,842909],[33566,749635,5965],[34724,567056,645908],[38397,976841,114857],[41596,756920,756376],[42323,568307,228042],[50775,387740,218538],[61200,430269,411341],[76753,128525,68496],[79373,804949,468753],[81162,945496,354439],[83491,488856,82703],[83809,615534,135829],[91172,98128,912707],[95567,530117,871928],[101588,239875,783665],[103078,590123,714837],[103699,628880,670340],[106349,601107,634192],[114080,857023,390674],[127529,156548,766654],[137072,782287,221710],[139108,668109,706758],[141344,450521,304555],[147516,954217,783723],[147543,822521,605998],[152329,865672,871749],[155260,725627,85938],[157561,672597,545652],[161181,795511,915546],[165951,657821,612662],[168914,648886,559332],[176974,403872,328905],[177537,816528,832605],[178894,994383,245167],[179305,756396,288023],[205335,698945,602609],[212822,529316,389301],[229320,301090,412311],[237431,802167,532853],[241799,432691,875928],[267123,868784,764314],[282273,563128,851718],[282813,337595,839969],[293252,872759,547091],[294475,588008,544742],[310848,575608,8816],[313543,702058,619704],[325577,888559,912371],[330608,552502,212597],[332655,726247,322151],[356504,578275,261647],[357551,420868,893362],[358688,445854,822451],[359730,411661,261651],[367095,705352,206884],[368783,930183,526370],[369792,438228,17430],[372046,918137,417386],[384795,779748,89023],[385884,954729,987280],[390022,543892,949489],[419733,989088,752157],[422927,835825,640265],[424969,556942,208378],[437284,468376,167867],[441169,712058,143721],[452677,730601,452847],[453781,899636,4472],[455288,861562,314782],[465055,497234,610455],[468848,953512,993894],[564747,800626,521581],[569498,632750,102677],[580055,865963,52393],[590629,767024,328585],[594183,729278,559762],[633995,710904,837755],[637204,972619,56114],[640775,884992,894921],[643236,732511,895800],[645857,777086,452259],[663772,852581,904928],[665117,673222,153191],[673219,810151,736462],[683913,859158,474705],[691729,895602,974107],[695824,730590,525683],[744533,979535,858112],[751142,866326,818831],[758572,830775,838557],[789925,989097,188384],[823175,949879,924869],[871352,970590,706320],[874124,958946,58789],[879565,947487,883632],[883183,910077,337730],[888036,936787,995802]]
    print(Solution().getSkyline(buildings))
